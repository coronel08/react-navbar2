[{"/home/fidel/code/react-navbar2/src/index.js":"1","/home/fidel/code/react-navbar2/src/App.js":"2","/home/fidel/code/react-navbar2/src/components/Navbar.js":"3","/home/fidel/code/react-navbar2/src/pages/Home.js":"4","/home/fidel/code/react-navbar2/src/pages/About.js":"5","/home/fidel/code/react-navbar2/src/pages/Item.js":"6","/home/fidel/code/react-navbar2/src/pages/Test.js":"7","/home/fidel/code/react-navbar2/src/pages/Items.jsx":"8","/home/fidel/code/react-navbar2/src/components/SidebarData.js":"9","/home/fidel/code/react-navbar2/src/pages/Search.js":"10"},{"size":273,"mtime":1617832970956,"results":"11","hashOfConfig":"12"},{"size":766,"mtime":1619413802107,"results":"13","hashOfConfig":"12"},{"size":1805,"mtime":1617832970956,"results":"14","hashOfConfig":"12"},{"size":238,"mtime":1617832970956,"results":"15","hashOfConfig":"12"},{"size":1988,"mtime":1617832970956,"results":"16","hashOfConfig":"12"},{"size":2303,"mtime":1617832970956,"results":"17","hashOfConfig":"12"},{"size":4824,"mtime":1617832970956,"results":"18","hashOfConfig":"12"},{"size":1165,"mtime":1617832970956,"results":"19","hashOfConfig":"12"},{"size":888,"mtime":1619414324442,"results":"20","hashOfConfig":"12"},{"size":234,"mtime":1619413946828,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"18r8smf",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"24"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"24"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"24"},"/home/fidel/code/react-navbar2/src/index.js",[],["48","49"],"/home/fidel/code/react-navbar2/src/App.js",[],"/home/fidel/code/react-navbar2/src/components/Navbar.js",[],"/home/fidel/code/react-navbar2/src/pages/Home.js",[],"/home/fidel/code/react-navbar2/src/pages/About.js",["50"],"import { render } from '@testing-library/react';\nimport React, {Component} from 'react'\n\nclass About extends Component {\n    state={\n        listitems:[\n            {\n                id: 0,\n                context:'Primary',\n                modifier: 'list-group-item list-group-item-primary'\n            },\n            {\n                id: 1,\n                context:'Secondary',\n                modifier: 'list-group-item list-group-item-secondary'\n            },\n            {\n                id: 2,\n                context:'Success',\n                modifier: 'list-group-item list-group-item-success'\n            },\n            {\n                id: 3,\n                context: 'Danger',\n                modifier: 'list-group-item list-group-item-danger'\n            },\n            {\n                id: 4,\n                context: 'Warning',\n                modifier: 'list-group-item list-group-item-warning'\n            }\n        ]\n    };\n\n    // Conditional Rendering, if list is empty do this, else iterate items\n    renderItems(){\n        if (this.state.listitems.length === 0){\n            return (\n                <div class='alert alert-danger p-3' role='alert'>\n                    There are no items to list\n                </div>\n            );\n        } else{\n            return (\n                <ul className='list-group'>\n                    {this.state.listitems.map(listitem => (\n                        <li key={listitem.id} className={listitem.modifier}>\n                            {listitem.context}\n                        </li>\n                    ))}\n                </ul>\n            );\n        }\n    }\n\n    render(){\n        return (\n            <React.Fragment>\n                <div className='about'>\n                    <h1>About</h1>\n                    <ul className='list-group m-3'>\n                        {this.renderItems()}\n                    </ul>\n                </div>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default About\n","/home/fidel/code/react-navbar2/src/pages/Item.js",["51"],"import React,{Component, useState} from 'react'\n\nclass Item extends Component{\n// Binding even handler in react, replaced by arrow function in handleIncrement\n    // constructor(){\n    //     super();\n    //     this.handleIncrement=this.handleIncrement.bind(this);\n    // }\n\n    // accept value from items by passing props.thing\n    state={\n        count:this.props.value\n    };\n\n// handling an event, naming convention to use handle___.\n// the setState method replaces state constructor\n    handleIncrement = () =>{\n        this.setState({count:this.state.count + 1});\n    }\n\n// delete button here takes delete event from parents @ Items.jsx\n    render(){\n        return(\n            <React.Fragment>\n                <div className='item text-center'>\n                    <div style={this.styleTodo} className='card m-2'>\n                        <h5 className={this.styleCardHeader()}>{this.styleCount()}</h5>\n                        <div className='card-body'>\n                            <button\n                                onClick={() => {\n                                    this.handleIncrement();\n                                }}\n                                className='btn btn-lg btn-outline-secondary'\n                            >\n                                Increment\n                            </button>\n                            <button \n                                className='btn btn-lg btn-outline-danger ml-4'\n                                onClick={() => this.props.onDelete(this.props.id)}\n                            >\n                                Delete\n                            </button>\n                        </div>\n                        {this.props.children}\n                    </div>\n                </div>\n            </React.Fragment>\n        );\n    }\n\n    styleTodo={\n        left: '200px',\n        width: '60%',\n    }\n\n// Conditional for count, 0 show no items else show count\n    styleCount(){\n        const{count} = this.state;\n        return count === 0 ? 'No Items':count;\n    }\n\n// Conditional styling if 0 style in warning, else primary \n    styleCardHeader(){\n        let classes = 'card-header h4 text-white bg-';\n        classes += this.state.count === 0 ? 'warning':'primary';\n        return classes;\n    }\n\n\n}\n\nexport default Item\n","/home/fidel/code/react-navbar2/src/pages/Test.js",["52","53","54","55"],"import React, {useState, useEffect} from 'react';\nimport './Test.css'\n\n// useState explaned in https://www.youtube.com/watch?v=O6P86uwfdR0\n\n// Function that gets passed into useState 1st and 2nd way\nfunction testData(){\n    console.log('run function')\n    return 1\n};\n\nfunction Test() {\n    // 1st way to pass state, called every render/change\n    // const [count, setCount] = useState(testData())\n    // 2nd way to pass state, only gets called on first render\n    // const [count, setCount] = useState(() => testData())\n    // passing objects into state, can also seperate count and theme to be seperate states. \n    const [state, setState] = useState({count:2, theme:'blue'})\n    const num = state.count\n    const theme = state.theme\n\n\n    // right way to update value based on prev value\n    // function decreaseCount() {\n    //     return setCount(prevCount => prevCount.count - 1)\n    // };\n    function decreaseCount(){\n        setState(prevState => {\n            return {\n                ...prevState, \n                count: prevState.count - 1}\n        })\n    }\n\n    // wrong way to update value, used Const shorthand ---------------------\n    // const increaseCount = () => setState(state.count +1)\n    // longhanded version of const with wrong update ---------------------------\n    // const increaseCount = () =>{\n    //     return setCount(count +1)\n    // };\n    function increaseCount(){\n        setState(prevState => {\n            return {\n                ...prevState, \n                count: prevState.count +1, \n                theme:'Red'}\n        })\n    }\n\n    \n\n    // State & useEffect for rendering posts/users, uses promises\n    const [resourceType, setResourceType] = useState('posts')\n    // Create an empty array for fetching json data, gets mapped in html\n    const [items, setItems] = useState([])\n    \n    useEffect(() => {\n        fetch(`https://jsonplaceholder.typicode.com/${resourceType}`)\n            .then(response => response.json())\n            .then(json => setItems(json))\n    },[resourceType])\n\n    return (\n        <React.Fragment>\n        <section className='showcase'>\n            <div className='clock'>\n                {/* The Clock either using class or function */}\n                <ClockUsingHooks />\n            </div>\n            <div className='count'>\n                <button className='btn-lg' onClick={decreaseCount}>-</button>\n                <h2>{state.count}<span>{state.theme}</span></h2>\n                <button className='btn-lg' onClick={increaseCount}>+</button>\n            </div>\n            <div className='posts'>\n                    <button onClick={() => setResourceType('posts')}>Posts</button>\n                    <button onClick={() => setResourceType('users')}>Users</button>\n                    <h1>{resourceType}</h1>\n                    {/* mapping json */}\n                    <span>\n                        {items.map(item => {\n                        return <pre>{JSON.stringify(item)}</pre>\n                        })}\n                    </span>\n            </div>\n            </section>\n        </React.Fragment>\n    )\n}\nexport default Test\n\n\n/* \nPracticing using classes, rendered in html above.\nLifeCycle Methods = mounting and unmounting elements from DOM. Invokes the following four build-in methods\n- constructor()\n- getDerivedStateFromProps()\n- render()\n- componentDidMount()\nsetState can only be used in classes, not in functions.\nhttps://dev.to/danielleye/react-class-component-vs-function-component-with-hooks-13dg\n*/\nclass ClockUsingClass extends React.Component{\n    constructor(props){\n        super(props)\n        this.state = {date: new Date() }\n    }\n\n    // calls on changeTime()\n    componentDidMount(){\n        this.time = setInterval(() => {\n            this.changeTime()\n        }, 1000)\n    }\n\n    componentWillUnmount(){\n        clearInterval(this.time)\n    }\n\n    // updates date state\n    changeTime(){\n        this.setState({ date: new Date() })\n    }\n\n    render(){\n        return(\n            <div className='clock'>\n                <h1>Hello! This is a class component clock.</h1>\n                <h2>It is {this.state.date.toLocaleTimeString()}</h2>\n            </div>\n        )\n    }\n}\n\n\n/* \nRedone using functions and hooks instead of classes\nrendered in test\n*/\n\n function ClockUsingHooks() {\n     const [time, setTime] = useState(new Date())\n     \n     const changeTime = () => {\n         setTime(new Date())\n     }\n\n//  useEffect() hook used to replicate lifecycle behaviour\n    useEffect(() => {\n        const tick = setInterval(() => {\n            changeTime()\n        }, 1000)\n        return () => clearInterval(tick)\n    })\n\n    return(\n        <div className='clock'>\n            <h1>This is a function component clock</h1>\n            <h2>It is {time.toLocaleTimeString()}</h2>\n        </div>\n    )\n }","/home/fidel/code/react-navbar2/src/pages/Items.jsx",["56"],"import React, {Component, useState} from 'react';\nimport Item from './Item';\n\nclass Items extends Component{\n// create state for how many lists to make\n    state = {\n        items:[\n            {id:1, value:0},\n            {id:2, value:10},\n            {id:3, value:0}\n        ]\n    };\n\n    handleDelete = itemId => {\n        const items = this.state.items.filter(item => item.id !== itemId);\n        this.setState({items:items});\n    };\n\n// render 3 to do list by passing state in map\n    render(){\n        return (\n            <React.Fragment>\n                {this.state.items.map(item => (\n                    <Item \n                        key={item.id} \n                        value={item.value}\n                        onDelete={this.handleDelete}\n                        id={item.id}\n                    >\n                        <div className='card-footer text-muted'>\n                            Footer passed by children.prop For item Number <b className='badge badge-pill badge-warning'>{item.id}</b>\n                        </div>\n                    </Item>\n                ))}\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Items\n","/home/fidel/code/react-navbar2/src/components/SidebarData.js",[],"/home/fidel/code/react-navbar2/src/pages/Search.js",["57"],"import React from 'react'\nimport ReactDOM from 'react-dom'\nimport 'bulma'\n\nfunction Search() {\n    return (\n        <div className='content'>\n            <h1>Search This</h1>\n            \n        </div>\n    )\n}\n\nexport default Search\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","severity":1,"message":"63","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":16},{"ruleId":"62","severity":1,"message":"66","line":1,"column":26,"nodeType":"64","messageId":"65","endLine":1,"endColumn":34},{"ruleId":"62","severity":1,"message":"67","line":7,"column":10,"nodeType":"64","messageId":"65","endLine":7,"endColumn":18},{"ruleId":"62","severity":1,"message":"68","line":19,"column":11,"nodeType":"64","messageId":"65","endLine":19,"endColumn":14},{"ruleId":"62","severity":1,"message":"69","line":20,"column":11,"nodeType":"64","messageId":"65","endLine":20,"endColumn":16},{"ruleId":"62","severity":1,"message":"70","line":103,"column":7,"nodeType":"64","messageId":"65","endLine":103,"endColumn":22},{"ruleId":"62","severity":1,"message":"66","line":1,"column":27,"nodeType":"64","messageId":"65","endLine":1,"endColumn":35},{"ruleId":"62","severity":1,"message":"71","line":2,"column":8,"nodeType":"64","messageId":"65","endLine":2,"endColumn":16},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'render' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'testData' is defined but never used.","'num' is assigned a value but never used.","'theme' is assigned a value but never used.","'ClockUsingClass' is defined but never used.","'ReactDOM' is defined but never used.","no-global-assign","no-unsafe-negation"]